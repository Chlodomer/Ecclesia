.shell {
  display: flex;
  flex-direction: column;
  gap: var(--space-xl);
  height: 100%;
  padding: var(--space-2xl);
}

.primaryGrid {
  display: grid;
  grid-template-columns: 1fr 2fr 1fr;
  gap: var(--space-xl);
  min-height: 0;
}

.timelineColumn,
.sceneColumn,
.eventColumn {
  display: flex;
  flex-direction: column;
  border-radius: var(--radius-lg);
  background: rgba(255, 255, 255, 0.78);
  box-shadow: var(--elevation-md);
  backdrop-filter: blur(12px);
  min-height: 0;
  border-top: 4px solid var(--era-accent, transparent);
}

.timelineColumn {
  padding: var(--space-xl);
  gap: var(--space-lg);
}

.sessionHeader {
  display: flex;
  flex-direction: column;
  gap: var(--space-xs);
}

.sessionHeader h1 {
  margin: 0;
  font-family: var(--font-display);
  letter-spacing: 0.1em;
  text-transform: uppercase;
  font-size: 1.2rem;
  color: var(--color-bark);
}

.sessionHeader span {
  font-size: 0.85rem;
  text-transform: uppercase;
  letter-spacing: 0.12em;
  color: var(--color-text-muted);
}

.timelineStats {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: var(--space-md);
}

.panelTitle {
  font-family: var(--font-display);
  letter-spacing: 0.08em;
  text-transform: uppercase;
  font-size: 0.9rem;
  margin: 0 0 var(--space-sm) 0;
  color: var(--color-bark);
}

.statCard {
  background: rgba(255, 255, 255, 0.9);
  border-radius: var(--radius-md);
  padding: var(--space-md);
  border: 1px solid rgba(0, 0, 0, 0.06);
  display: flex;
  flex-direction: column;
  gap: var(--space-xs);
}

.statLabel {
  font-size: 0.75rem;
  font-weight: 600;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  color: var(--color-text-muted);
}

.statValue {
  font-size: 1.15rem;
  font-weight: 600;
  color: var(--color-bark);
  display: flex;
  align-items: baseline;
  gap: var(--space-xs);
}

.statDelta {
  font-size: 0.85rem;
  font-weight: 600;
}

.statDeltaPositive {
  color: var(--color-olive);
}

.statDeltaNegative {
  color: var(--color-accent);
}

.timelineList {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: var(--space-sm);
  max-height: 280px;
  overflow-y: auto;
}

.timelineList li {
  padding-left: var(--space-lg);
  position: relative;
  font-size: 0.95rem;
  line-height: 1.5;
  color: var(--color-text-primary);
  animation: log-fade-slide 320ms ease both;
}

.timelineList li::before {
  content: '';
  position: absolute;
  width: 7px;
  height: 7px;
  border-radius: 50%;
  background: var(--color-accent);
  left: 0;
  top: 0.6em;
}

.logEntryTitle {
  font-weight: 600;
  color: var(--color-bark);
}

.logEntryMeta {
  display: block;
  font-size: 0.75rem;
  letter-spacing: 0.06em;
  text-transform: uppercase;
  color: var(--color-text-muted);
}

.timelineList li:nth-child(1) { animation-delay: 0ms; }
.timelineList li:nth-child(2) { animation-delay: 80ms; }
.timelineList li:nth-child(3) { animation-delay: 160ms; }
.timelineList li:nth-child(4) { animation-delay: 240ms; }
.timelineList li:nth-child(5) { animation-delay: 320ms; }
.timelineList li:nth-child(6) { animation-delay: 400ms; }

@keyframes log-fade-slide {
  from {
    opacity: 0;
    transform: translateX(-12px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.sceneColumn {
  position: relative;
  overflow: hidden;
  color: #fff;
  justify-content: flex-end;
  padding: var(--space-xl);
}

.phaseComplete .sceneBackgroundLayer {
  animation: victory-fade 1000ms ease-out both;
}

/* When complete, force title art base to read clearly and blur for mood */
.phaseComplete .sceneBackgroundBase {
  filter: blur(4px) saturate(1.1) brightness(1.05);
}

@keyframes victory-fade {
  to {
    opacity: 0.15;
    filter: saturate(1.8) brightness(1.3);
  }
}

.sceneBackground {
  position: absolute;
  inset: 0;
  background-size: cover;
  background-position: center;
  filter: saturate(1.05);
}

/* Crossfade backgrounds */
.sceneBackgrounds {
  position: absolute;
  inset: 0;
  z-index: 1;
}

.sceneBackgroundLayer {
  position: absolute;
  inset: 0;
  background-size: cover;
  background-position: center;
  filter: saturate(1.05);
  transition: opacity 800ms ease-in-out;
  opacity: 1;
}

.sceneBackgroundBase {
  position: absolute;
  inset: 0;
  background-size: cover;
  background-position: center;
  filter: saturate(1.05);
  z-index: 0;
}

.sceneBackgroundCurrent {
  z-index: 2;
  opacity: 1;
  transform-origin: center center;
  animation: subtle-zoom 20s ease-in-out infinite alternate;
}

.sceneBackgroundPrevious {
  z-index: 3;
  opacity: 1;
}

.sceneBackgroundTransitioning .sceneBackgroundPrevious {
  opacity: 0;
}

@media (prefers-reduced-motion: reduce) {
  .sceneBackgroundLayer {
    transition: none;
    opacity: 1 !important;
  }
  .sceneBackgroundCurrent {
    animation: none;
  }
}

.sceneOverlay {
  position: absolute;
  inset: 0;
  background: var(--era-overlay,
    linear-gradient(180deg, rgba(24, 27, 22, 0.05) 0%, rgba(24, 27, 22, 0.75) 90%)
  );
  z-index: 4;
}

.eraOverlay {
  position: absolute;
  top: 1rem;
  left: 1rem;
  z-index: 5;
  font-family: var(--font-display);
  text-transform: uppercase;
  letter-spacing: 0.14em;
  font-weight: 700;
  font-size: clamp(1.35rem, 2.8vw + 0.6rem, 2.6rem);
  color: var(--era-accent, var(--color-bark));
  /* Black embossing + drop shadow for readability */
  -webkit-text-stroke: 1px rgba(0, 0, 0, 0.65);
  text-shadow:
    /* soft outer glow */ 0 2px 10px rgba(0, 0, 0, 0.5),
    /* faux stroke approximations */ 1px 1px 0 #000, -1px 1px 0 #000, 1px -1px 0 #000, -1px -1px 0 #000,
    /* subtle lift */ 0 3px 6px rgba(0, 0, 0, 0.4);
  pointer-events: none;
  animation: era-sweep 800ms cubic-bezier(0.2, 0.8, 0.2, 1) 600ms both;
}

.sceneContent {
  position: relative;
  z-index: 6;
  display: flex;
  flex-direction: column;
  gap: var(--space-md);
  max-width: 75%;
}

.fadeIn {
  animation: fade-in 420ms ease both;
}

@keyframes fade-in {
  from {
    opacity: 0;
    transform: translateY(6px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.sceneTitle {
  font-family: var(--font-display);
  letter-spacing: 0.08em;
  text-transform: uppercase;
  font-size: 1.2rem;
  margin: 0;
}

.sceneCaption {
  font-size: 0.95rem;
  line-height: 1.5;
  color: rgba(255, 255, 255, 0.86);
  margin: 0;
}

.eventColumn {
  padding: var(--space-xl);
  gap: var(--space-lg);
}

/* Column tag labels for clarity */
.columnTag {
  align-self: flex-start;
  margin: calc(-1 * var(--space-sm)) 0 var(--space-sm) 0;
  padding: 0.15rem 0.5rem;
  border-radius: 999px;
  font-size: 0.7rem;
  letter-spacing: 0.12em;
  text-transform: uppercase;
  color: var(--color-bark);
  background: rgba(243, 240, 233, 0.9);
  border: 1px solid rgba(0, 0, 0, 0.06);
}

.eventMeta {
  display: flex;
  justify-content: space-between;
  font-size: 0.8rem;
  text-transform: uppercase;
  letter-spacing: 0.12em;
  color: var(--color-text-muted);
}

.eventCard {
  background: rgba(255, 255, 255, 0.95);
  border-radius: var(--radius-md);
  padding: var(--space-lg);
  border: 1px solid rgba(0, 0, 0, 0.08);
  display: flex;
  flex-direction: column;
  gap: var(--space-md);
}

.eventFade {
  animation: fade-in 420ms ease both;
}

/* Era transition screen */
/* Chapter slide overlay inside the central panel */
.chapterActive .sceneOverlay {
  backdrop-filter: blur(1px);
}

.eraChapterOverlay {
  position: absolute;
  inset: 8% 10%;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 7;
  pointer-events: auto;
}

.eraChapterSlide {
  width: min(880px, 80%);
  padding: 2rem 2.4rem;
  border-radius: 16px;
  background: rgba(255, 255, 255, 0.95);
  border-top: 5px solid var(--era-accent, var(--color-accent));
  box-shadow: 0 24px 48px rgba(0,0,0,0.25);
  text-align: center;
  animation: era-chapter-seq 2400ms ease-in-out both;
}

.eraChapterTitle {
  margin: 0 0 0.4rem 0;
  font-family: var(--font-display);
  text-transform: uppercase;
  letter-spacing: 0.16em;
  font-size: clamp(1.4rem, 3.2vw + 0.6rem, 2.2rem);
  color: var(--color-bark);
}

.eraChapterBrief {
  margin: 0;
  color: var(--color-text-primary);
}

@keyframes era-chapter-seq {
  0% { opacity: 0; transform: translateY(10px) scale(0.98); }
  20% { opacity: 1; transform: translateY(0) scale(1); }
  80% { opacity: 1; transform: translateY(0) scale(1); }
  100% { opacity: 0; transform: translateY(-6px) scale(0.99); }
}

/* Meanwhile overlay, anchored to bottom of scene image */
.meanwhileOverlay {
  position: absolute;
  left: 50%;
  /* Raise above the title/caption area so it doesn't cover text */
  bottom: 11.2rem;
  transform: translateX(-50%);
  z-index: 7;
  pointer-events: none;
}

.meanwhileCard {
  background: rgba(24, 24, 24, 0.72);
  color: #fff;
  border-radius: 12px;
  border-top: 3px solid var(--era-accent, var(--color-accent));
  padding: 0.6rem 0.9rem;
  max-width: min(720px, 88vw);
  box-shadow: 0 10px 24px rgba(0, 0, 0, 0.35);
}

.meanwhileTitle {
  margin: 0 0 0.25rem 0;
  font-size: 0.8rem;
  text-transform: uppercase;
  letter-spacing: 0.12em;
  opacity: 0.9;
}

.meanwhileText {
  margin: 0;
  font-size: 0.95rem;
}

.meanwhileDeltas {
  margin-top: 0.35rem;
  display: flex;
  gap: 0.4rem;
  flex-wrap: wrap;
}

.deltaChip {
  background: rgba(255, 255, 255, 0.12);
  border: 1px solid rgba(255, 255, 255, 0.18);
  border-radius: 999px;
  padding: 0.1rem 0.45rem;
  font-size: 0.8rem;
}

.deltaPlus {
  color: #b9f4c7;
  border-color: rgba(185, 244, 199, 0.35);
}

.deltaMinus {
  color: #ffd1c7;
  border-color: rgba(255, 209, 199, 0.35);
}

.meanwhileEnter {
  animation: mw-fold-in 320ms ease-out both;
}

.meanwhileExit {
  animation: mw-fold-out 300ms ease-in both;
}

@keyframes mw-fold-in {
  from {
    opacity: 0;
    transform: translateX(-50%) translateY(8px) scale(0.98);
  }
  to {
    opacity: 1;
    transform: translateX(-50%) translateY(0) scale(1);
  }
}

@keyframes mw-fold-out {
  from {
    opacity: 1;
    transform: translateX(-50%) translateY(0) scale(1);
  }
  to {
    opacity: 0;
    transform: translateX(-50%) translateY(8px) scale(0.98);
  }
}

.eventHeading {
  margin: 0;
  font-size: 1.2rem;
  letter-spacing: 0.04em;
  color: var(--color-bark);
}

.eventNarrative {
  margin: 0;
  line-height: 1.6;
  color: var(--color-text-primary);
}

.notice {
  margin: 0 0 var(--space-sm) 0;
  font-size: 0.9rem;
  color: var(--color-text-muted);
}

.choiceList {
  display: flex;
  flex-direction: column;
  gap: var(--space-sm);
}

.choiceButton {
  border-radius: var(--radius-md);
  border: 1px solid rgba(0, 0, 0, 0.12);
  padding: var(--space-md);
  background: rgba(248, 242, 232, 0.9);
  cursor: pointer;
  transition: transform 0.15s ease-in-out, box-shadow 0.15s ease-in-out, border-color 0.15s ease-in-out;
  text-align: left;
}

.choiceButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 18px rgba(111, 79, 54, 0.15);
}

.choiceButton:active {
  transform: translateY(0);
  box-shadow: 0 4px 8px rgba(111, 79, 54, 0.1);
  transition-duration: 50ms;
}

@keyframes subtle-zoom {
  from { transform: scale(1); }
  to { transform: scale(1.05); }
}

@keyframes era-sweep {
  from {
    opacity: 0;
    transform: translateX(-100%) skewX(-10deg);
  }
  to {
    opacity: 1;
    transform: translateX(0) skewX(0);
  }
}

.choiceButtonActive {
  border-color: var(--color-accent);
  background: rgba(201, 93, 46, 0.12);
  box-shadow:
    inset 0 0 0 1px rgba(201, 93, 46, 0.35),
    0 0 0 4px rgba(201, 93, 46, 0);
  animation: choice-pulse 2000ms ease-in-out infinite;
}

@keyframes choice-pulse {
  0%, 100% {
    box-shadow:
      inset 0 0 0 1px rgba(201, 93, 46, 0.35),
      0 0 0 4px rgba(201, 93, 46, 0);
  }
  50% {
    box-shadow:
      inset 0 0 0 1px rgba(201, 93, 46, 0.5),
      0 0 0 4px rgba(201, 93, 46, 0.2);
  }
}

@media (prefers-reduced-motion: reduce) {
  .choiceButtonActive {
    animation: none;
  }
}

.choiceButton:disabled {
  opacity: 0.7;
  cursor: not-allowed;
  transform: none;
  box-shadow: none;
}

.choiceLocked {
  position: relative;
}

.lockNote {
  margin-top: 0.25rem;
  font-size: 0.8rem;
  color: var(--color-text-muted);
}

.lockReqList {
  display: inline;
}

.choiceTitle {
  font-weight: 600;
  margin: 0 0 var(--space-xs) 0;
  color: var(--color-bark);
}

.choiceHint {
  margin: 0;
  font-size: 0.9rem;
  color: var(--color-text-muted);
}

.reflectionBlock {
  display: flex;
  flex-direction: column;
  gap: var(--space-sm);
  background: rgba(255, 255, 255, 0.7);
  border-radius: var(--radius-md);
  padding: var(--space-md);
  border: 1px solid rgba(0, 0, 0, 0.08);
}

.reflectionBlock h4 {
  margin: 0;
  font-size: 0.95rem;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  color: var(--color-bark);
}

.reflectionOptions {
  display: grid;
  gap: var(--space-xs);
}

.reflectionOption {
  display: flex;
  align-items: flex-start;
  gap: var(--space-xs);
  font-size: 0.9rem;
  color: var(--color-text-primary);
}

.confirmButton {
  align-self: flex-start;
  margin-top: var(--space-sm);
  background: var(--color-accent);
  color: #fff;
  border: none;
  padding: var(--space-sm) var(--space-lg);
  font-size: 0.9rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  border-radius: var(--radius-md);
  cursor: pointer;
  transition: transform 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

.confirmButton:disabled {
  opacity: 0.45;
  cursor: not-allowed;
  box-shadow: none;
}

.confirmButton:not(:disabled):hover {
  transform: translateY(-1px);
  box-shadow: 0 10px 18px rgba(201, 93, 46, 0.25);
}

.outcomeCard {
  background: rgba(255, 255, 255, 0.9);
  border-radius: var(--radius-md);
  padding: var(--space-md);
  border: 1px solid rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  gap: var(--space-xs);
}

.outcomeCard strong {
  color: var(--color-bark);
}

/* Outcome reveal sequence */
.outcomeCardReveal {
  animation: outcome-reveal 680ms cubic-bezier(0.34, 1.56, 0.64, 1) both;
}

.outcomeCardReveal strong {
  display: block;
  opacity: 0;
  animation: outcome-title 400ms ease 200ms both;
}

.outcomeCardReveal p {
  opacity: 0;
  animation: outcome-text 500ms ease 400ms both;
}

@keyframes outcome-reveal {
  0% {
    opacity: 0;
    transform: translateY(20px) scale(0.95);
  }
  60% {
    opacity: 1;
    transform: translateY(-3px) scale(1.01);
  }
  100% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes outcome-title {
  from { opacity: 0; transform: translateY(-8px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes outcome-text {
  from { opacity: 0; transform: translateY(8px); }
  to { opacity: 1; transform: translateY(0); }
}

@media (prefers-reduced-motion: reduce) {
  .outcomeCardReveal,
  .outcomeCardReveal strong,
  .outcomeCardReveal p {
    animation: none;
  }
}

.cooldownNotice {
  font-size: 0.85rem;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  color: var(--color-text-muted);
}

.completeCard {
  background: rgba(255, 255, 255, 0.92);
  border-radius: var(--radius-lg);
  padding: var(--space-2xl);
  display: flex;
  flex-direction: column;
  gap: var(--space-lg);
  align-items: center;
  justify-content: center;
  text-align: center;
}

.completeTitle {
  margin: 0;
  font-family: var(--font-display);
  letter-spacing: 0.12em;
  text-transform: uppercase;
  font-size: 1.4rem;
  color: var(--color-bark);
  animation: title-swoop 600ms cubic-bezier(0.34, 1.56, 0.64, 1) 800ms both;
}

.completeSummary {
  margin: 0;
  max-width: 420px;
  line-height: 1.6;
  animation: summary-reveal 400ms ease 1400ms both;
}

@keyframes title-swoop {
  from {
    opacity: 0;
    transform: translateY(-60px) scale(0.9);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes summary-reveal {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Climax overlay before final card */
.climaxOverlay {
  position: absolute;
  inset: 0;
  z-index: 8;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none;
}

.climaxBurst {
  width: 140vmax;
  height: 140vmax;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(255,255,255,0.8) 0%, rgba(255,255,255,0.0) 60%);
  filter: blur(6px);
  animation: climax-pulse 1200ms ease-out both;
}

@keyframes climax-pulse {
  0% { transform: scale(0.6); opacity: 0.0; }
  35% { transform: scale(1.0); opacity: 1; }
  100% { transform: scale(1.4); opacity: 0; }
}

/* Closing report overlay */
.reportOverlay {
  position: fixed;
  inset: 0;
  z-index: 9999;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  animation: fade-in 320ms ease both;
}

.reportBackdrop {
  position: absolute;
  inset: 0;
  background-image: url('/assets/title.png');
  background-size: cover;
  background-position: center;
  filter: blur(6px) saturate(1.1) brightness(0.9);
  transform: scale(1.03);
}

.reportVignette {
  position: absolute;
  inset: 0;
  background:
    radial-gradient(1200px 500px at 50% 40%, rgba(0,0,0,0.45) 0%, rgba(0,0,0,0.65) 70%, rgba(0,0,0,0.8) 100%),
    linear-gradient(180deg, rgba(0,0,0,0.55) 0%, rgba(0,0,0,0.8) 100%);
}

.reportCard {
  position: relative;
  background: rgba(255,255,255,0.94);
  border-radius: var(--radius-lg);
  padding: var(--space-2xl) var(--space-2xl) calc(var(--space-2xl) + 0.5rem) var(--space-2xl);
  width: min(880px, 92vw);
  box-shadow: 0 30px 60px rgba(0,0,0,0.45);
  border: 1px solid rgba(0,0,0,0.12);
  outline: 3px solid rgba(255,255,255,0.6);
}

.finalEpithet {
  margin: 0 0 var(--space-sm) 0;
  font-family: var(--font-display);
  text-transform: uppercase;
  letter-spacing: 0.1em;
  font-size: 1.6rem;
  color: var(--color-bark);
  text-align: center;
}

.reportLead {
  margin: 0 0 var(--space-md) 0;
  color: var(--color-text-primary);
  text-align: center;
  max-width: 60ch;
  margin-left: auto;
  margin-right: auto;
}

.reportTitle {
  margin: var(--space-md) 0 var(--space-md) 0;
  font-family: var(--font-display);
  letter-spacing: 0.12em;
  text-transform: uppercase;
  color: var(--color-bark);
  text-align: center;
}

.reportGrid {
  display: grid;
  grid-template-columns: repeat(4, minmax(0, 1fr));
  gap: var(--space-md);
  margin-bottom: var(--space-md);
}

.reportGrid strong {
  display: block;
  font-size: 0.75rem;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  color: var(--color-text-muted);
}

.reportGrid p {
  margin: 0;
  font-size: 1.05rem;
  color: var(--color-bark);
  font-weight: 600;
}

.reportMeta {
  margin-top: var(--space-sm);
  color: var(--color-text-muted);
  text-align: center;
}

.reportSummary {
  margin-top: var(--space-sm);
  color: var(--color-text-primary);
  text-align: center;
}

.reportActions {
  margin-top: var(--space-md);
  display: flex;
  gap: var(--space-sm);
  justify-content: center;
}

@media (prefers-reduced-motion: reduce) {
  .climaxBurst,
  .reportOverlay {
    animation: none;
  }
}

.logEmpty {
  font-size: 0.85rem;
  color: var(--color-text-muted);
}

.loadingState {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.9rem;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  color: var(--color-text-muted);
}

.spinner {
  display: inline-block;
  width: 14px;
  height: 14px;
  border: 2px solid rgba(111, 79, 54, 0.2);
  border-top-color: var(--color-bark);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-right: 0.5rem;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Stat change highlight */
.statChanged {
  animation: stat-flash 320ms ease-out;
}

@keyframes stat-flash {
  0% { box-shadow: 0 0 0 0 rgba(201, 93, 46, 0.0); background: rgba(255,255,255,0.9); }
  50% { box-shadow: 0 0 0 3px rgba(201, 93, 46, 0.25); background: rgba(201, 93, 46, 0.08); }
  100% { box-shadow: 0 0 0 0 rgba(201, 93, 46, 0.0); background: rgba(255,255,255,0.9); }
}

@media (prefers-reduced-motion: reduce) {
  .timelineList li,
  .spinner,
  .statChanged,
  .phaseComplete .sceneBackgroundLayer,
  .completeTitle,
  .completeSummary,
  .eraOverlay {
    animation: none;
  }
}

@media (prefers-reduced-motion: reduce) {
  .eraChapterSlide {
    animation: none;
  }
}

.insightsBar {
  display: grid;
  grid-template-columns: repeat(3, minmax(0, 1fr));
  gap: var(--space-lg);
}

/* Collapsible insights section */
.insightsHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-top: var(--space-md);
  margin-bottom: var(--space-sm);
}

.insightsContainer {
  /* wrapper that captures hover to auto-expand */
}

.insightsCollapsible {
  overflow: hidden;
  transition: height 420ms cubic-bezier(0.2, 0.8, 0.2, 1), opacity 320ms ease-in-out;
}

.insightsToggle {
  border: 1px solid rgba(0, 0, 0, 0.12);
  background: rgba(255, 255, 255, 0.92);
  border-radius: var(--radius-md);
  padding: 0.4rem 0.7rem;
  font-size: 0.8rem;
  text-transform: uppercase;
  letter-spacing: 0.12em;
  color: var(--color-bark);
  cursor: pointer;
}

.insightsCollapsed {
  display: none;
}

/* Pane hover hint bubbles */
.paneHint {
  position: absolute;
  top: 8px;
  left: 50%;
  transform: translate(-50%, -6px);
  opacity: 0;
  transition: opacity 360ms ease, transform 360ms ease;
  background: rgba(16, 16, 16, 0.6);
  color: #fff;
  font-size: 0.8rem;
  padding: 0.35rem 0.6rem;
  border-radius: 999px;
  backdrop-filter: blur(6px);
  pointer-events: none;
  white-space: nowrap;
}

.paneHintVisible {
  opacity: 1;
  transform: translate(-50%, 0);
}

/* prevent implicit show via :hover; visibility is controlled via class */
.timelineColumn:hover .paneHint:not(.paneHintVisible),
.eventColumn:hover .paneHint:not(.paneHintVisible) {
  opacity: 0;
  transform: translate(-50%, -6px);
}

.chevron {
  display: inline-block;
  margin-right: 0.4rem;
  font-weight: 700;
}

/* Rectangular inline hint for compact labels (e.g., Imperial Status) */
.hintBox {
  position: absolute;
  top: calc(100% + 6px);
  left: 0;
  z-index: 10;
  opacity: 0;
  transform: translateY(-6px);
  transition: opacity 360ms ease, transform 360ms ease;
  background: rgba(16, 16, 16, 0.7);
  color: #fff;
  font-size: 0.8rem;
  line-height: 1.3;
  padding: 0.45rem 0.6rem;
  border-radius: 8px;
  backdrop-filter: blur(6px);
  pointer-events: none;
  max-width: 240px;
  white-space: normal;
  box-shadow: 0 6px 18px rgba(0, 0, 0, 0.25);
}

.hintBoxVisible {
  opacity: 1;
  transform: translateY(0);
}

.statusHint {
  /* semantic alias if we want to target status-only tweaks later */
}

.insightCard {
  background: rgba(255, 255, 255, 0.92);
  border-radius: var(--radius-lg);
  box-shadow: var(--elevation-md);
  padding: var(--space-xl);
  display: flex;
  flex-direction: column;
  gap: var(--space-md);
  min-height: 0;
}

.eraCard {
  background: linear-gradient(180deg, rgba(241, 235, 223, 0.94), rgba(224, 210, 190, 0.92));
  border-top: 4px solid var(--era-accent, rgba(201, 93, 46, 0.5));
}

.insightHeader {
  display: flex;
  align-items: baseline;
  justify-content: space-between;
  gap: var(--space-sm);
}

.insightHeader h3 {
  margin: 0;
  font-size: 1rem;
  text-transform: uppercase;
  letter-spacing: 0.12em;
  font-family: var(--font-display);
  color: var(--color-bark);
}

.eraBadge {
  font-size: 0.75rem;
  letter-spacing: 0.12em;
  text-transform: uppercase;
  color: var(--era-accent, var(--color-accent));
  font-weight: 600;
}

.feedHint {
  font-size: 0.75rem;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  color: var(--color-text-muted);
}

.insightCopy {
  margin: 0;
  color: var(--color-text-primary);
  line-height: 1.6;
}

.insightMeta {
  display: grid;
  grid-template-columns: repeat(3, minmax(0, 1fr));
  gap: var(--space-sm);
}

.insightMeta div {
  display: flex;
  flex-direction: column;
  gap: var(--space-xs);
}

.insightMeta strong {
  font-size: 0.75rem;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  color: var(--color-text-muted);
}

.insightMeta p {
  margin: 0;
}

.latestOutcome {
  padding-top: var(--space-sm);
  border-top: 1px solid rgba(0, 0, 0, 0.08);
}

.latestOutcome strong {
  display: block;
  font-size: 0.75rem;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  color: var(--color-text-muted);
  margin-bottom: var(--space-xs);
}

.latestOutcome p {
  margin: 0;
}

.reflectionList {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: var(--space-sm);
  overflow-y: auto;
  max-height: 220px;
}

.reflectionItem {
  background: rgba(243, 240, 233, 0.78);
  border-radius: var(--radius-md);
  padding: var(--space-md);
  display: flex;
  flex-direction: column;
  gap: var(--space-xs);
}

.reflectionMeta {
  display: flex;
  justify-content: space-between;
  font-size: 0.85rem;
  color: var(--color-bark);
  font-weight: 600;
}

.reflectionPrompt {
  margin: 0;
  font-size: 0.9rem;
  color: var(--color-text-primary);
}

.reflectionAnswer {
  margin: 0;
  display: flex;
  align-items: baseline;
  gap: var(--space-xs);
  font-size: 0.85rem;
  color: var(--color-text-primary);
}

.reflectionBadge {
  font-size: 0.7rem;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  border-radius: 999px;
  padding: 0.1rem 0.45rem;
  font-weight: 600;
}

.reflectionCorrect {
  background: rgba(72, 98, 76, 0.15);
  color: var(--color-olive);
}

.reflectionMiss {
  background: rgba(201, 93, 46, 0.15);
  color: var(--color-accent);
}

.settingsCard {
  gap: var(--space-lg);
}

.settingBlock {
  display: flex;
  flex-direction: column;
  gap: var(--space-sm);
}

.settingRow {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: var(--space-md);
}

.switchLabel {
  display: flex;
  align-items: center;
  gap: var(--space-xs);
  font-size: 0.9rem;
  color: var(--color-text-primary);
}

.volumeLabel {
  display: flex;
  align-items: center;
  gap: var(--space-xs);
  font-size: 0.75rem;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  color: var(--color-text-muted);
}

.volumeLabel input {
  width: 120px;
}

.textSizeLabel {
  font-size: 0.75rem;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  color: var(--color-text-muted);
}

.textSizeButtons {
  display: flex;
  gap: var(--space-sm);
}

.textSizeButton {
  border: 1px solid rgba(0, 0, 0, 0.18);
  padding: var(--space-xs) var(--space-md);
  border-radius: var(--radius-md);
  background: rgba(255, 255, 255, 0.9);
  font-size: 0.85rem;
  cursor: pointer;
  transition: background 0.15s ease-in-out, transform 0.15s ease-in-out;
}

.textSizeButton:hover {
  transform: translateY(-1px);
  background: rgba(111, 79, 54, 0.08);
}

.buttonActive {
  background: rgba(111, 79, 54, 0.15);
  border-color: rgba(111, 79, 54, 0.4);
  color: var(--color-bark);
}

.settingRow input[type='checkbox'] {
  width: 18px;
  height: 18px;
}

@media (max-width: 1200px) {
  .primaryGrid {
    grid-template-columns: 1fr;
  }

  .insightsBar {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 768px) {
  .sceneContent {
    max-width: 100%;
  }

  .insightMeta {
    grid-template-columns: 1fr;
  }
}

/* Era themes: define accent and overlay tint */
.eraFounding {
  --era-accent: #2f6b3c; /* greenish */
  --era-overlay: linear-gradient(180deg, rgba(24, 56, 34, 0.08) 0%, rgba(24, 56, 34, 0.78) 90%);
}

.eraPersecution {
  --era-accent: #b54840; /* redish */
  --era-overlay: linear-gradient(180deg, rgba(72, 24, 20, 0.08) 0%, rgba(72, 24, 20, 0.78) 90%);
}

.eraImperial {
  --era-accent: #7a4e96; /* purplish */
  --era-overlay: linear-gradient(180deg, rgba(40, 22, 56, 0.08) 0%, rgba(40, 22, 56, 0.78) 90%);
}

.eraFading {
  --era-accent: #b08a2e; /* yellowish (fading empire, Visigothic settlement) */
  --era-overlay: linear-gradient(180deg, rgba(64, 52, 18, 0.08) 0%, rgba(64, 52, 18, 0.78) 90%);
}
